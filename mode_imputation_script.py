# -*- coding: utf-8 -*-
"""Mode Imputation script.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yMbIaHyFlERZEhArW_yA3ADclvvXAJp-
"""

import pandas as pd
import glob

def Average_files(participant_num):
    # Find all files for the given participant number
    file_pattern = f"*participant_{participant_num}_trial_*"
    file_list = glob.glob(file_pattern)

    # Create an empty dataframe to store the aggregated data
    participant_data = pd.DataFrame()

       # Loop through all files for the participant
    for file_name in file_list:
        # Load the file as a pandas dataframe
        df = pd.read_csv(file_name)

        # Remove the specified columns
        columns_to_remove = ['Unnamed: 0','Participant name', 'Computer timestamp', 'Sensor', 'Project name', 
                      'Export date', 'Recording name','Recording date',  'Recording date UTC',  'Validity left',
       'Validity right', 'Recording start time UTC','Recording start time', 'Recording duration', 'Timeline name', 'Recording Fixation filter name', 
                      'Recording software version', 'Recording resolution height', 'Recording resolution width', 
                      'Recording monitor latency', 'Eyetracker timestamp', 'Event', 'Event value','Presented Stimulus name', 'Presented Media name','Eye movement type']
        df = df.drop(columns=columns_to_remove)

        # convert all columns to float64 by checking the column data type
        for col in df.columns:
            if df[col].dtype != 'float64':
                if df[col].dtype == 'object':
                    df[col] = df[col].str.replace(',', '.')
                try:
                    df[col] = pd.to_numeric(df[col], errors='raise').astype('float64')
                except:
                    continue

        # Add a 'Participant_Number' column to the dataframe
        df['Participant_Number'] = participant_num

        # Calculate the mode of the remaining columns
        modes = df.mode()

        # Add a row to the participant data with the modes
        participant_data = participant_data.append(modes.iloc[0], ignore_index=True)

    # Write the participant data to a new CSV file
    output_file_name = f"participant_{participant_num}_data.csv"
    participant_data.to_csv(output_file_name, index=False)
    print(df.info())

# Loop through all participants and process their files
for participant_num in range(1, 61):
    Average_files(participant_num)

